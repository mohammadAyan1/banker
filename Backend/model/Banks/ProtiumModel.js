const mongoose = require('mongoose');

const ProtiumSchema = new mongoose.Schema({
  leadId: { type: String },
  valuerName: { type: String },
  date: { type: Date },
  nameOfApplicant: { type: String },
  nameOfPropertyOwner: { type: String },
  propertyAddressSite: { type: String },
  legalAddress: { type: String },
  contactNoOfOwner: { type: String },
  landmark: { type: String },
  dateOfTechnicalVisit: { type: Date },
  propertyUsage: { type: String },
  occupancy: { type: String },
  habitation: { type: String },
  wardNo: { type: String },
  typeOfLocality: { type: String },
  distanceFromCityCentre: { type: String },
  siteAccess: { type: String },
  corporationLimit: { type: String },
  panchayatUnion: { type: String },
  conditionsOfApproachRoad: { type: String },
  noOfFloors: { type: String },
  floorWiseUsage: { type: String },
  ageOfTheProperty: { type: Number },

  floor: { type: String },
  bua: { type: Number },
  ratePerUnit: { type: Number },
  replacementCost: { type: Number },
  depreciation: { type: Number },
  lessDepreciation: { type: Number },
  netDepreciatedValue: { type: Number },

  buildingValue: { type: Number },
  amenities: { type: Number },
  totalBuildingValue: { type: Number },
  totalValueOfProperty: { type: Number },
  marketValue: { type: Number },
  distressedSaleValue: { type: Number },
  govtGuidelineValue: { type: Number },
  landValue: { type: Number },
  totalGovtValue: { type: Number },
  riskAssessment: { type: String },
  remarks: { type: String },

  constructionAsPerApproved: { type: String },
  approvedPlanDetails: { type: String },
  constructionPermission: { type: String },
  violationsObserved: { type: String },
  structureConfirmingLocal: { type: String },
  asPerApprovalPlan: { type: String },
  deviationSqft: { type: String },
  deviationAtSite: { type: String },
  deviationPercentage: { type: String },
  architectCertifiedEstimate: { type: String },
  constructionAmountCertified: { type: String },
  fairMarketValueFloor: { type: String },
  fairMarketValueActual: { type: String },
  fairMarketValuePlan: { type: String },
  finalAreaForValuation: { type: String },
  landArea: { type: String },
  rate: { type: String },
  landValueCorrection: { type: String }, // renamed due to duplicate 'landValue'

  east: { type: String },
  west: { type: String },
  north: { type: String },
  south: { type: String },
  boundariesMatching: { type: String },
  propertyIdentified: { type: String },
  plotDemarcated: { type: String },

  dimensionE: { type: String },
  dimensionN: { type: String },
  dimensionW: { type: String },
  dimensionS: { type: String },
  totalPlotArea: { type: String },
  reductionArea: { type: String },
  totalArea: { type: String },
  landPlotAreaDoc: { type: String },
  landPlotAreaPlan: { type: String },
  landPlotAreaSite: { type: String },
  builtUpAreaPlan: { type: String },
  builtUpAreaActual: { type: String },
  firstFloor: { type: String },
  typeOfStructure: { type: String },
  noOfWings: { type: String },
  noOfUnitsPerFloor: { type: String },

  qualityOfConstruction: { type: String },
  structuralObservation: { type: String },
  configuration: { type: String },
  flooringFinishing: { type: String },
  roofingTerracing: { type: String },
  qualityFixturesSettings: { type: String },
  doorsWindows: { type: String }
});

module.exports = mongoose.model('Protium', ProtiumSchema);
